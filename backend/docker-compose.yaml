name: learning

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./src:/app/src
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - kafka
      - zookeeper

  db:
    container_name: db
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - postgresData:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}

  adminer:
    container_name: adminer
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - db

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redisData:/data
    command: redis-server --appendonly yes

  kafka:
    container_name: kafka
    image: bitnami/kafka
    ports:
      - 9092:9092
    volumes:
      - kafkaData:/bitnami/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENER_NAME_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_SERVER_ID: 1
      ZOO_PEER_PORT: 2888
      ZOO_LEADER_PORT: 3888
      ALLOW_ANONYMOUS_LOGIN: yes

volumes:
  postgresData:
  kafkaData:
  redisData:
